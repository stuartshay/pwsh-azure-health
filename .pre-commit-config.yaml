# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-added-large-files
        args: [--maxkb=500]
      - id: check-merge-conflict
      - id: detect-private-key
        exclude: ^scripts/pre-commit-hook\.sh$
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: no-commit-to-branch
        args: [--branch, master, --branch, main]

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        args:
          - --config-data
          - "{extends: default, rules: {line-length: {max: 120}, document-start: disable, truthy: {check-keys: false}}}"

  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.8
    hooks:
      - id: actionlint

  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  - repo: local
    hooks:
      - id: bicep-lint
        name: Bicep Linter
        entry: >
          bash -c 'for file in "$@"; do
          echo "Linting $file...";
          az bicep lint --file "$file" --diagnostics-format sarif > /dev/null || exit 1;
          done' --
        language: system
        files: \.bicep$
        pass_filenames: true
        verbose: true

      - id: bicep-build
        name: Bicep Build Validation
        entry: >
          bash -c 'for file in "$@"; do
          echo "Building $file...";
          az bicep build --file "$file" --stdout > /dev/null || exit 1;
          done' --
        language: system
        files: \.bicep$
        pass_filenames: true
        verbose: true

      - id: psscriptanalyzer
        name: PSScriptAnalyzer
        entry: >
          pwsh -NoProfile -Command
          "Import-Module PSScriptAnalyzer -ErrorAction Stop;
          Invoke-ScriptAnalyzer -Path . -Recurse
          -Settings ./.PSScriptAnalyzerSettings.psd1
          -ReportSummary -EnableExit 2>&1 | Where-Object { $_ -notmatch 'Object reference not set' }"
        language: system
        files: \.(ps1|psm1|psd1)$
        pass_filenames: false
        verbose: true

      - id: pester-tests
        name: Run Pester Tests
        entry: >
          pwsh -NoProfile -Command
          "$ErrorActionPreference = 'Stop';
          Import-Module Pester -MinimumVersion 5.0.0;
          try {
            Import-Module Az.Accounts -ErrorAction Stop;
            Import-Module Az.ResourceGraph -ErrorAction Stop;
          } catch {
            Write-Host 'Warning: Az modules not available, skipping tests' -ForegroundColor Yellow;
            exit 0;
          }
          $config = New-PesterConfiguration;
          $config.Run.Path = './tests/unit';
          $config.Output.Verbosity = 'Minimal';
          $config.TestResult.Enabled = $false;
          $config.CodeCoverage.Enabled = $false;
          $results = Invoke-Pester -Configuration $config;
          if ($results.FailedCount -gt 0) { exit 1 }"
        language: system
        pass_filenames: false
        stages: [pre-push]
        verbose: true

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [pester-tests, psscriptanalyzer, bicep-lint, bicep-build]
  submodules: false
